@using TeslaCamPlayer.BlazorHosted.Shared.Models

<div class="viewer">
    <div class="video-container">
        <div @onclick="@(() => SwitchMainVideo("128D7AB3"))" class="@GetVideoClass("128D7AB3")">
            <VideoPlayer @key="@("128D7AB3")" @ref="_videoPlayerFront" Class="@GetPlayerClass("128D7AB3")" VideoEnded="VideoEnded" TimeUpdate="FrontVideoTimeUpdate" />
        </div>
        <div @onclick="@(() => SwitchMainVideo("87B15DCA"))" class="@GetVideoClass("87B15DCA")">
            <VideoPlayer @key="@("87B15DCA")" @ref="_videoPlayerRightRepeater" Class="@GetPlayerClass("87B15DCA")" VideoEnded="VideoEnded" />
        </div>
        <div @onclick="@(() => SwitchMainVideo("66EC38D4"))" class="@GetVideoClass("66EC38D4")">
            <VideoPlayer @key="@("66EC38D4")" @ref="_videoPlayerBack" Class="@GetPlayerClass("66EC38D4")" VideoEnded="VideoEnded" />
        </div>
        <div @onclick="@(() => SwitchMainVideo("D1916B24"))" class="@GetVideoClass("D1916B24")">
            <VideoPlayer @key="@("D1916B24")" @ref="_videoPlayerLeftRepeater" Class="@GetPlayerClass("D1916B24")" VideoEnded="VideoEnded" />
        </div>
    </div>
    <div class="controls">
        <div class="play-pause">
            <MudIconButton Icon="@Icons.Material.Filled.SkipPrevious" Size="Size.Large" OnClick="@PreviousButtonClicked" />
            <MudIconButton Icon="@(_isPlaying ? Icons.Material.Filled.PauseCircleOutline : Icons.Material.Filled.PlayCircleOutline)" Size="Size.Large" OnClick="@PlayPauseClicked" />
            <MudIconButton Icon="@Icons.Material.Filled.SkipNext" Size="Size.Large" OnClick="@NextButtonClicked" />
            <MudTooltip Text="Jump to event marker">
                <MudIconButton Icon="@Icons.Material.Filled.RadioButtonChecked" Size="Size.Medium" OnClick="@JumpToEventMarker" />
            </MudTooltip>
        </div>
        <div class="seeker-slider-container">
            <div class="current-time-container">@GetCurrentScrubTime()</div>
            <div class="slider-container">
                <MudSlider T="double"
                           @ref="_timelineSlider"
                           Max="@_timelineMaxSeconds"
                           Step="0.01"
                           Size="Size.Medium"
                           @bind-Value="@TimelineValue"
                           Variant="Variant.Filled"
                           @onpointerdown="@TimelineSliderPointerDown"
                           @onpointerup="@TimelineSliderPointerUp" />
                <div class="event-marker" style="@EventMarkerStyle()"></div>
                @foreach (var segment in _clip?.Segments ?? Array.Empty<ClipVideoSegment>())
                {
                    <div class="segment-marker" style="@SegmentStartMarkerStyle(segment)"></div>
                }
            </div>
            <div class="time-container">@_clip?.EndDate.ToString("hh:mm:ss tt")</div>
        </div>
    </div>
</div>
